
  const void *sqlite3_column_blob(sqlite3_stmt*,int iCol);
  //
  void * sqlite3_aggregate_context(sqlite3_context*,int nBytes);
  int  (*sqlite3_aggregate_count)(sqlite3_context*);
  int  (*sqlite3_bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));
  int  (*sqlite3_bind_double)(sqlite3_stmt*,int,double);
  int  (*sqlite3_bind_int)(sqlite3_stmt*,int,int);
  int  (*sqlite3_bind_int64)(sqlite3_stmt*,int,sqlite_int64);
  int  (*sqlite3_bind_null)(sqlite3_stmt*,int);
  int  (*sqlite3_bind_parameter_count)(sqlite3_stmt*);
  int  (*sqlite3_bind_parameter_index)(sqlite3_stmt*,const char*zName);
  const char * (*sqlite3_bind_parameter_name)(sqlite3_stmt*,int);
  int  (*sqlite3_bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));
  int  (*sqlite3_bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));
  int  (*sqlite3_bind_value)(sqlite3_stmt*,int,const sqlite3_value*);
  int  (*sqlite3_busy_handler)(sqlite3*,int(*)(void*,int),void*);
  int  (*sqlite3_busy_timeout)(sqlite3*,int ms);
  int  (*sqlite3_changes)(sqlite3*);
  int  (*sqlite3_close)(sqlite3*);
  int  (*sqlite3_collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const char*));
  int  (*sqlite3_collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const void*));
  // const void * (*sqlite3_column_blob)(sqlite3_stmt*,int iCol);
  int  (*sqlite3_column_bytes)(sqlite3_stmt*,int iCol);
  int  (*sqlite3_column_bytes16)(sqlite3_stmt*,int iCol);
  int  (*sqlite3_column_count)(sqlite3_stmt*pStmt);
  const char * (*sqlite3_column_database_name)(sqlite3_stmt*,int);
  const void * (*sqlite3_column_database_name16)(sqlite3_stmt*,int);
  const char * (*sqlite3_column_decltype)(sqlite3_stmt*,int i);
  const void * (*sqlite3_column_decltype16)(sqlite3_stmt*,int);
  double  (*sqlite3_column_double)(sqlite3_stmt*,int iCol);
  int  (*sqlite3_column_int)(sqlite3_stmt*,int iCol);
  sqlite_int64  (*sqlite3_column_int64)(sqlite3_stmt*,int iCol);
  const char * (*sqlite3_column_name)(sqlite3_stmt*,int);
  const void * (*sqlite3_column_name16)(sqlite3_stmt*,int);
  const char * (*sqlite3_column_origin_name)(sqlite3_stmt*,int);
  const void * (*sqlite3_column_origin_name16)(sqlite3_stmt*,int);
  const char * (*sqlite3_column_table_name)(sqlite3_stmt*,int);
  const void * (*sqlite3_column_table_name16)(sqlite3_stmt*,int);
  const unsigned char * (*sqlite3_column_text)(sqlite3_stmt*,int iCol);
  const void * (*sqlite3_column_text16)(sqlite3_stmt*,int iCol);
  int  (*sqlite3_column_type)(sqlite3_stmt*,int iCol);
  sqlite3_value* (*sqlite3_column_value)(sqlite3_stmt*,int iCol);
  void * (*sqlite3_commit_hook)(sqlite3*,int(*)(void*),void*);
  int  (*sqlite3_complete)(const char*sql);
  int  (*sqlite3_complete16)(const void*sql);
  int  (*sqlite3_create_collation)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*));
  int  (*sqlite3_create_collation16)(sqlite3*,const void*,int,void*,int(*)(void*,int,const void*,int,const void*));
  int  (*sqlite3_create_function)(sqlite3*,const char*,int,int,void*,void (*sqlite3_xFunc)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xStep)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xFinal)(sqlite3_context*));
  int  (*sqlite3_create_function16)(sqlite3*,const void*,int,int,void*,void (*sqlite3_xFunc)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xStep)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xFinal)(sqlite3_context*));
  int (*sqlite3_create_module)(sqlite3*,const char*,const sqlite3_module*,void*);
  int  (*sqlite3_data_count)(sqlite3_stmt*pStmt);
  sqlite3 * (*sqlite3_db_handle)(sqlite3_stmt*);
  int (*sqlite3_declare_vtab)(sqlite3*,const char*);
  int  (*sqlite3_enable_shared_cache)(int);
  int  (*sqlite3_errcode)(sqlite3*db);
  const char * (*sqlite3_errmsg)(sqlite3*);
  const void * (*sqlite3_errmsg16)(sqlite3*);
  int  (*sqlite3_exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);
  int  (*sqlite3_expired)(sqlite3_stmt*);
  int  (*sqlite3_finalize)(sqlite3_stmt*pStmt);
  void  (*sqlite3_free)(void*);
  void  (*sqlite3_free_table)(char**result);
  int  (*sqlite3_get_autocommit)(sqlite3*);
  void * (*sqlite3_get_auxdata)(sqlite3_context*,int);
  int  (*sqlite3_get_table)(sqlite3*,const char*,char***,int*,int*,char**);
  int  (*sqlite3_global_recover)(void);
  void  (*sqlite3_interruptx)(sqlite3*);
  sqlite_int64  (*sqlite3_last_insert_rowid)(sqlite3*);
  const char * (*sqlite3_libversion)(void);
  int  (*sqlite3_libversion_number)(void);
  void *(*sqlite3_malloc)(int);
  char * (*sqlite3_mprintf)(const char*zFormat,...);
  int  (*sqlite3_open)(const char*,sqlite3**);
  int  (*sqlite3_open16)(const void*,sqlite3**);
  int  (*sqlite3_prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);
  int  (*sqlite3_prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);
  void * (*sqlite3_profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);
  void  (*sqlite3_progress_handler)(sqlite3*,int,int(*)(void*),void*);
  void *(*sqlite3_realloc)(void*,int);
  int  (*sqlite3_reset)(sqlite3_stmt*pStmt);
  void  (*sqlite3_result_blob)(sqlite3_context*,const void*,int,void(*)(void*));
  void  (*sqlite3_result_double)(sqlite3_context*,double);
  void  (*sqlite3_result_error)(sqlite3_context*,const char*,int);
  void  (*sqlite3_result_error16)(sqlite3_context*,const void*,int);
  void  (*sqlite3_result_int)(sqlite3_context*,int);
  void  (*sqlite3_result_int64)(sqlite3_context*,sqlite_int64);
  void  (*sqlite3_result_null)(sqlite3_context*);
  void  (*sqlite3_result_text)(sqlite3_context*,const char*,int,void(*)(void*));
  void  (*sqlite3_result_text16)(sqlite3_context*,const void*,int,void(*)(void*));
  void  (*sqlite3_result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));
  void  (*sqlite3_result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));
  void  (*sqlite3_result_value)(sqlite3_context*,sqlite3_value*);
  void * (*sqlite3_rollback_hook)(sqlite3*,void(*)(void*),void*);
  int  (*sqlite3_set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,const char*,const char*),void*);
  void  (*sqlite3_set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));
  char * (*sqlite3_xsnprintf)(int,char*,const char*,...);
  int  (*sqlite3_step)(sqlite3_stmt*);
  int  (*sqlite3_table_column_metadata)(sqlite3*,const char*,const char*,const char*,char const**,char const**,int*,int*,int*);
  void  (*sqlite3_thread_cleanup)(void);
  int  (*sqlite3_total_changes)(sqlite3*);
  void * (*sqlite3_trace)(sqlite3*,void(*sqlite3_xTrace)(void*,const char*),void*);
  int  (*sqlite3_transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);
  void * (*sqlite3_update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,sqlite_int64),void*);
  void * (*sqlite3_user_data)(sqlite3_context*);
  const void * (*sqlite3_value_blob)(sqlite3_value*);
  int  (*sqlite3_value_bytes)(sqlite3_value*);
  int  (*sqlite3_value_bytes16)(sqlite3_value*);
  double  (*sqlite3_value_double)(sqlite3_value*);
  int  (*sqlite3_value_int)(sqlite3_value*);
  sqlite_int64  (*sqlite3_value_int64)(sqlite3_value*);
  int  (*sqlite3_value_numeric_type)(sqlite3_value*);
  const unsigned char * (*sqlite3_value_text)(sqlite3_value*);
  const void * (*sqlite3_value_text16)(sqlite3_value*);
  const void * (*sqlite3_value_text16be)(sqlite3_value*);
  const void * (*sqlite3_value_text16le)(sqlite3_value*);
  int  (*sqlite3_value_type)(sqlite3_value*);
  char *(*sqlite3_vmprintf)(const char*,va_list);
  /* Added ??? */
  int (*sqlite3_overload_function)(sqlite3*, const char *zFuncName, int nArg);
  /* Added by 3.3.13 */
  int (*sqlite3_prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);
  int (*sqlite3_prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);
  int (*sqlite3_clear_bindings)(sqlite3_stmt*);
  /* Added by 3.4.1 */
  int (*sqlite3_create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,void (*sqlite3_xDestroy)(void *));
  /* Added by 3.5.0 */
  int (*sqlite3_bind_zeroblob)(sqlite3_stmt*,int,int);
  int (*sqlite3_blob_bytes)(sqlite3_blob*);
  int (*sqlite3_blob_close)(sqlite3_blob*);
  int (*sqlite3_blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,int,sqlite3_blob**);
  int (*sqlite3_blob_read)(sqlite3_blob*,void*,int,int);
  int (*sqlite3_blob_write)(sqlite3_blob*,const void*,int,int);
  int (*sqlite3_create_collation_v2)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*),void(*)(void*));
  int (*sqlite3_file_control)(sqlite3*,const char*,int,void*);
  sqlite3_int64 (*sqlite3_memory_highwater)(int);
  sqlite3_int64 (*sqlite3_memory_used)(void);
  sqlite3_mutex *(*sqlite3_mutex_alloc)(int);
  void (*sqlite3_mutex_enter)(sqlite3_mutex*);
  void (*sqlite3_mutex_free)(sqlite3_mutex*);
  void (*sqlite3_mutex_leave)(sqlite3_mutex*);
  int (*sqlite3_mutex_try)(sqlite3_mutex*);
  int (*sqlite3_open_v2)(const char*,sqlite3**,int,const char*);
  int (*sqlite3_release_memory)(int);
  void (*sqlite3_result_error_nomem)(sqlite3_context*);
  void (*sqlite3_result_error_toobig)(sqlite3_context*);
  int (*sqlite3_sleep)(int);
  void (*sqlite3_soft_heap_limit)(int);
  sqlite3_vfs *(*sqlite3_vfs_find)(const char*);
  int (*sqlite3_vfs_register)(sqlite3_vfs*,int);
  int (*sqlite3_vfs_unregister)(sqlite3_vfs*);
  int (*sqlite3_xthreadsafe)(void);
  void (*sqlite3_result_zeroblob)(sqlite3_context*,int);
  void (*sqlite3_result_error_code)(sqlite3_context*,int);
  int (*sqlite3_test_control)(int, ...);
  void (*sqlite3_randomness)(int,void*);
  sqlite3 *(*sqlite3_context_db_handle)(sqlite3_context*);
  int (*sqlite3_extended_result_codes)(sqlite3*,int);
  int (*sqlite3_limit)(sqlite3*,int,int);
  sqlite3_stmt *(*sqlite3_next_stmt)(sqlite3*,sqlite3_stmt*);
  const char *(*sqlite3_sql)(sqlite3_stmt*);
  int (*sqlite3_status)(int,int*,int*,int);
  int (*sqlite3_backup_finish)(sqlite3_backup*);
  sqlite3_backup *(*sqlite3_backup_init)(sqlite3*,const char*,sqlite3*,const char*);
  int (*sqlite3_backup_pagecount)(sqlite3_backup*);
  int (*sqlite3_backup_remaining)(sqlite3_backup*);
  int (*sqlite3_backup_step)(sqlite3_backup*,int);
  const char *(*sqlite3_compileoption_get)(int);
  int (*sqlite3_compileoption_used)(const char*);
  int (*sqlite3_create_function_v2)(sqlite3*,const char*,int,int,void*,void (*sqlite3_xFunc)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xStep)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xFinal)(sqlite3_context*),void(*sqlite3_xDestroy)(void*));
  int (*sqlite3_db_config)(sqlite3*,int,...);
  sqlite3_mutex *(*sqlite3_db_mutex)(sqlite3*);
  int (*sqlite3_db_status)(sqlite3*,int,int*,int*,int);
  int (*sqlite3_extended_errcode)(sqlite3*);
  void (*sqlite3_log)(int,const char*,...);
  sqlite3_int64 (*sqlite3_soft_heap_limit64)(sqlite3_int64);
  const char *(*sqlite3_sourceid)(void);
  int (*sqlite3_stmt_status)(sqlite3_stmt*,int,int);
  int (*sqlite3_strnicmp)(const char*,const char*,int);
  int (*sqlite3_unlock_notify)(sqlite3*,void(*)(void**,int),void*);
  int (*sqlite3_wal_autocheckpoint)(sqlite3*,int);
  int (*sqlite3_wal_checkpoint)(sqlite3*,const char*);
  void *(*sqlite3_wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);
  int (*sqlite3_blob_reopen)(sqlite3_blob*,sqlite3_int64);
  int (*sqlite3_vtab_config)(sqlite3*,int op,...);
  int (*sqlite3_vtab_on_conflict)(sqlite3*);
  /* Version 3.7.16 and later */
  int (*sqlite3_close_v2)(sqlite3*);
  const char *(*sqlite3_db_filename)(sqlite3*,const char*);
  int (*sqlite3_db_readonly)(sqlite3*,const char*);
  int (*sqlite3_db_release_memory)(sqlite3*);
  const char *(*sqlite3_errstr)(int);
  int (*sqlite3_stmt_busy)(sqlite3_stmt*);
  int (*sqlite3_stmt_readonly)(sqlite3_stmt*);
  int (*sqlite3_stricmp)(const char*,const char*);
  int (*sqlite3_uri_boolean)(const char*,const char*,int);
  sqlite3_int64 (*sqlite3_uri_int64)(const char*,const char*,sqlite3_int64);
  const char *(*sqlite3_uri_parameter)(const char*,const char*);
  char *(*sqlite3_xvsnprintf)(int,char*,const char*,va_list);
  int (*sqlite3_wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);
  /* Version 3.8.7 and later */
  int (*sqlite3_auto_extension)(void(*)(void));
  int (*sqlite3_bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,void(*)(void*));
  int (*sqlite3_bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,void(*)(void*),unsigned char);
  int (*sqlite3_cancel_auto_extension)(void(*)(void));
  int (*sqlite3_load_extension)(sqlite3*,const char*,const char*,char**);
  void *(*sqlite3_malloc64)(sqlite3_uint64);
  sqlite3_uint64 (*sqlite3_msize)(void*);
  void *(*sqlite3_realloc64)(void*,sqlite3_uint64);
  void (*sqlite3_reset_auto_extension)(void);
  void (*sqlite3_result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,void(*)(void*));
  void (*sqlite3_result_text64)(sqlite3_context*,const char*,sqlite3_uint64,void(*)(void*), unsigned char);
  int (*sqlite3_strglob)(const char*,const char*);
  /* Version 3.8.11 and later */
  sqlite3_value *(*sqlite3_value_dup)(const sqlite3_value*);
  void (*sqlite3_value_free)(sqlite3_value*);
  int (*sqlite3_result_zeroblob64)(sqlite3_context*,sqlite3_uint64);
  int (*sqlite3_bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);
  /* Version 3.9.0 and later */
  unsigned int (*sqlite3_value_subtype)(sqlite3_value*);
  void (*sqlite3_result_subtype)(sqlite3_context*,unsigned int);
  /* Version 3.10.0 and later */
  int (*sqlite3_status64)(int,sqlite3_int64*,sqlite3_int64*,int);
  int (*sqlite3_strlike)(const char*,const char*,unsigned int);
  int (*sqlite3_db_cacheflush)(sqlite3*);
  /* Version 3.12.0 and later */
  int (*sqlite3_system_errno)(sqlite3*);
  /* Version 3.14.0 and later */
  int (*sqlite3_trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);
  char *(*sqlite3_expanded_sql)(sqlite3_stmt*);
  /* Version 3.18.0 and later */
  void (*sqlite3_set_last_insert_rowid)(sqlite3*,sqlite3_int64);
  /* Version 3.20.0 and later */
  int (*sqlite3_prepare_v3)(sqlite3*,const char*,int,unsigned int,sqlite3_stmt**,const char**);
  int (*sqlite3_prepare16_v3)(sqlite3*,const void*,int,unsigned int,sqlite3_stmt**,const void**);
  int (*sqlite3_bind_pointer)(sqlite3_stmt*,int,void*,const char*,void(*)(void*));
  void (*sqlite3_result_pointer)(sqlite3_context*,void*,const char*,void(*)(void*));
  void *(*sqlite3_value_pointer)(sqlite3_value*,const char*);
  int (*sqlite3_vtab_nochange)(sqlite3_context*);
  int (*sqlite3_value_nochange)(sqlite3_value*);
  const char *(*sqlite3_vtab_collation)(sqlite3_index_info*,int);
  /* Version 3.24.0 and later */
  int (*sqlite3_keyword_count)(void);
  int (*sqlite3_keyword_name)(int,const char**,int*);
  int (*sqlite3_keyword_check)(const char*,int);
  sqlite3_str *(*sqlite3_str_new)(sqlite3*);
  char *(*sqlite3_str_finish)(sqlite3_str*);
  void (*sqlite3_str_appendf)(sqlite3_str*p, const char *zFormat, ...);
  void (*sqlite3_str_vappendf)(sqlite3_str*, const char *zFormat, va_list);
  void (*sqlite3_str_append)(sqlite3_str*, const char *zIn, int N);
  void (*sqlite3_str_appendall)(sqlite3_str*, const char *zIn);
  void (*sqlite3_str_appendchar)(sqlite3_str*, int N, char C);
  void (*sqlite3_str_reset)(sqlite3_str*);
  int (*sqlite3_str_errcode)(sqlite3_str*);
  int (*sqlite3_str_length)(sqlite3_str*);
  char *(*sqlite3_str_value)(sqlite3_str*);
  /* Version 3.25.0 and later */
  int (*sqlite3_create_window_function)(sqlite3*,const char*,int,int,void*,void (*sqlite3_xStep)(sqlite3_context*,int,sqlite3_value**),void (*sqlite3_xFinal)(sqlite3_context*),void (*sqlite3_xValue)(sqlite3_context*),void (*sqlite3_xInv)(sqlite3_context*,int,sqlite3_value**),void(*sqlite3_xDestroy)(void*));
  /* Version 3.26.0 and later */
  const char *(*sqlite3_normalized_sql)(sqlite3_stmt*);
  /* Version 3.28.0 and later */
  int (*sqlite3_stmt_isexplain)(sqlite3_stmt*);
  int (*sqlite3_value_frombind)(sqlite3_value*);
  /* Version 3.30.0 and later */
  int (*sqlite3_drop_modules)(sqlite3*,const char**);
  /* Version 3.31.0 and later */
  sqlite3_int64 (*sqlite3_hard_heap_limit64)(sqlite3_int64);
  const char *(*sqlite3_uri_key)(const char*,int);
  const char *(*sqlite3_filename_database)(const char*);
  const char *(*sqlite3_filename_journal)(const char*);
  const char *(*sqlite3_filename_wal)(const char*);
  /* Version 3.32.0 and later */
  const char *(*sqlite3_create_filename)(const char*,const char*,const char*,int,const char**);
  void (*sqlite3_free_filename)(const char*);
  sqlite3_file *(*sqlite3_database_file_object)(const char*);
  /* Version 3.34.0 and later */
  int (*sqlite3_txn_state)(sqlite3*,const char*);
  /* Version 3.36.1 and later */
  sqlite3_int64 (*sqlite3_changes64)(sqlite3*);
  sqlite3_int64 (*sqlite3_total_changes64)(sqlite3*);
  /* Version 3.37.0 and later */
  int (*sqlite3_autovacuum_pages)(sqlite3*,unsigned int(*)(void*,const char*,unsigned int,unsigned int,unsigned int),void*, void(*)(void*));
  /* Version 3.38.0 and later */
  int (*sqlite3_error_offset)(sqlite3*);
  int (*sqlite3_vtab_rhs_value)(sqlite3_index_info*,int,sqlite3_value**);
  int (*sqlite3_vtab_distinct)(sqlite3_index_info*);
  int (*sqlite3_vtab_in)(sqlite3_index_info*,int,int);
  int (*sqlite3_vtab_in_first)(sqlite3_value*,sqlite3_value**);
  int (*sqlite3_vtab_in_next)(sqlite3_value*,sqlite3_value**);
  /* Version 3.39.0 and later */
  int (*sqlite3_deserialize)(sqlite3*,const char*,unsigned char*,sqlite3_int64,sqlite3_int64,unsigned);
  unsigned char *(*sqlite3_serialize)(sqlite3*,const char *,sqlite3_int64*,unsigned int);
  const char *(*sqlite3_db_name)(sqlite3*,int);
  /* Version 3.40.0 and later */
  int (*sqlite3_value_encoding)(sqlite3_value*);
  /* Version 3.41.0 and later */
  int (*sqlite3_is_interrupted)(sqlite3*);


  /* Added manualy */
  void (*sqlite3_interrupt)(sqlite3*);

  int (*sqlite3_initialize)(void);
  int (*sqlite3_shutdown)(void);
  int (*sqlite3_os_init)(void);
  int (*sqlite3_os_end)(void);
  int (*sqlite3_enable_load_extension)(sqlite3 *db, int onoff);
  int (*sqlite3_config)(int, ...);

  int (*sqlite3_key)(sqlite3 *db, const void *pKey, int nKey);
  int (*sqlite3_key_v2)(sqlite3 *db, const char *zDbName, const void *pKey, int nKey);
  int (*sqlite3_rekey)(sqlite3 *db, const void *pKey, int nKey);
  int (*sqlite3_rekey_v2)(sqlite3 *db, const char *zDbName, const void *pKey, int nKey);

  int (*sqlite3_rtree_geometry_callback)(sqlite3 *db, const char *zGeom, int (*sqlite3_xGeom)(sqlite3_rtree_geometry*, int, sqlite3_rtree_dbl*,int*), void *pContext);
  int (*sqlite3_rtree_query_callback)(sqlite3 *db, const char *zQueryFunc, int (*sqlite3_xQueryFunc)(sqlite3_rtree_query_info*), void *pContext, void (*sqlite3_xDestructor)(void*));

  int (*sqlite3_snapshot_cmp)(sqlite3_snapshot *p1, sqlite3_snapshot *p2);
  void (*sqlite3_snapshot_free)(sqlite3_snapshot*);
  int  (*sqlite3_snapshot_get)(sqlite3 *db, const char *zSchema, sqlite3_snapshot **ppSnapshot);
  int  (*sqlite3_snapshot_open)(sqlite3 *db, const char *zSchema, sqlite3_snapshot *pSnapshot);
  int  (*sqlite3_snapshot_recover)(sqlite3 *db, const char *zDb);
  char *(*sqlite3_snprintf)(int n, char *zBuf, const char *zFormat, ...);
  char *(*sqlite3_vsnprintf)(int,char*,const char*, va_list);
  int (*sqlite3_threadsafe)(void);

  int  (*sqlite3_win32_is_nt)(void);
  void (*sqlite3_win32_sleep)(DWORD milliseconds);

  char *(*sqlite3_win32_mbcs_to_utf8)(const char *zText);
  char *(*sqlite3_win32_mbcs_to_utf8_v2)(const char *zText, int useAnsi);
  //char *(*sqlite3_win32_utf8_to_mbcs)(const char *zText);
  //char *(*sqlite3_win32_utf8_to_mbcs_v2)(const char *zText, int useAnsi);
  int (*sqlite3_win32_set_directory)(unsigned long type, void *zValue);
  int (*sqlite3_win32_set_directory8)(unsigned long type, const char *zValue);
  int (*sqlite3_win32_set_directory16)(unsigned long type, const void *zValue);
  char *(*sqlite3_win32_unicode_to_utf8)(LPCWSTR zWideText);
  char *(*sqlite3_win32_utf8_to_mbcs)(const char *zText);
  char *(*sqlite3_win32_utf8_to_mbcs_v2)(const char *zText, int useAnsi);
  LPWSTR (*sqlite3_win32_utf8_to_unicode)(const char *zText);
  void (*sqlite3_win32_write_debug)(const char *zBuf, int nBuf);


  //SQLITE_API SQLITE_EXPERIMENTAL int sqlite3_snapshot_recover(sqlite3 *db, const char *zDb);


  /* Deprecated */
  int (*sqlite3_memory_alarm)(void(*)(void*,sqlite3_int64,int),void*,sqlite3_int64);


